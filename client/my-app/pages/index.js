import Head from 'next/head'
import styles from '../styles/Home.module.css'

import React, {useState, useEffect, createElement} from 'react'
import Link from 'next/Link'
import { motion, AnimateSharedLayout, AnimatePresence } from 'framer-motion'

import axios from 'axios'

import Socials from '../components/Socials'

export default function Home() {
  const [nasdaqList, setNasdaqList] = useState([]);
  useEffect(() => {
    axios.get('http://localhost:3001/nasdaq').then((response) => {
        setNasdaqList(response.data)
    })
  }, []); 

  const [ticker, setTicker] = useState([]);
  useEffect(() => {
    axios.get('http://localhost:3001/read').then((response) => {
      setTicker(response.data);
    })
  }, [])

  //trending
  const [trending, setTrending] = useState([]);
  useEffect(() => {
    axios.post('http://localhost:3001/trending').then((response) => {
      setTrending(response.data);
      console.log(trending);
    })
  }, []); 
  
  for (var i = 0; i < trending.length; ++i) {
    if (trending[i].selftext === "") { trending.splice(i, 1); console.log("empty string found") }
  }
  const boxVariant = {
    hidden: {
      x: '-100vw'
    },
    visible: {
      x: 0,
      transition: {
        delay: 1.5,
      }
    }
  }
  const boxVariantRight = {
    hidden: {
      x: '100vw'
    },
    visible: {
      x: 0,
      transition: {
        delay: 1,
      }
    }
  }
  const listVariant = {
    hidden: {
      x: -10,
      opacity: 0
    },
    visible: {
      x: 0,
      opacity: 1,
    }
  }

  return (  
    <div className={styles.container}>
      <Head>
        <title>wsb-tracker</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <div>
          <h1 className={styles.title}>
            Welcome to <a href="/">WallStatusBets.io!</a>
          </h1>

          <p className={styles.description}>
            What do the people of the {' '}
            <code className={styles.code}>r/wallstreetbets</code>
            {' '} think?
          </p>
          <div className={styles.start}>
              <Link href="/searchresult">
                <motion.p 
                  className={styles.click}
                  animate={{ rotate:[0,5,-5,5,-5,0,0] }}
                  transition={{repeat: Infinity, repeatDelay:1}}
                  whileHover={{ scale: 1.1 }}
                  whileTap={{ scale: 0.9 }}
                >
                  Click here to check your favorite stock!
                </motion.p>
              </Link>
          </div>
        </div>

        <h1 className={styles.trendingTitle}>Trending</h1>

        <div className={styles.row}>
          
        <AnimateSharedLayout>
          <motion.div
            variants={boxVariant}
            animate="visible"
            initial="hidden"
          >
            {/* initial={{ borderRadius: 25 }} */}
            <motion.ul className={styles.trending} layout >
              <h3 className={styles.subHeader}>Trending posts on <code className={styles.code}>r/wallstreetbets</code></h3>
              
              {trending.map((val, key) => {
                if (key != 0 && key < 11) {
                    return (
                        <Item title={val.title} val={val.selftext} num={key} />
                    )
                }
              }

              )}
            </motion.ul>
          </motion.div>
        </AnimateSharedLayout>  

        <AnimateSharedLayout>
          <motion.div
            variants={boxVariantRight}
            animate="visible"
            initial="hidden"
          >
            <motion.ul className={styles.wsb} layout>
            <h3 className={styles.subHeader}>Trending searches on <code className={styles.code}>WallStatusBets.io</code></h3>
              {ticker.map((val, key) => {
                return (
                    <Item2 num={key} ticker={val.ticker} count={val.count}/>
                )
              }
              )}
            </motion.ul>
          </motion.div>
        </AnimateSharedLayout>          
        </div>
      </main>
      


      <footer className={styles.footer}>      
        <p>Powered by &nbsp;<span>Minsoo Kim</span></p>        
      </footer>
      <Socials />
      <p>WallStatusBets.io</p>
    </div>
  )
}

function Item(props) {
  const [isOpen, setIsOpen] = useState(false);

  const toggleOpen = () => setIsOpen(!isOpen);

  return (
    <motion.li 
      className="list" 
      layout onClick={toggleOpen} 
      // initial={{ borderRadius: 10 }}
    >
      <motion.div className={styles.entries} layout>{props.num}. {props.title}</motion.div>
      <AnimatePresence>{isOpen && <Content val={props.val}/>}</AnimatePresence>
    </motion.li>
  );
}

function Item2(props) {
  const [isOpen, setIsOpen] = useState(false);

  const toggleOpen = () => setIsOpen(!isOpen);

  return (
    <motion.li className="list" layout onClick={toggleOpen}>
      <motion.div className={styles.entries} layout>{props.num + 1}. {props.ticker}</motion.div>
      <AnimatePresence>{isOpen && <Content2 count={props.count}/>}</AnimatePresence>
    </motion.li>
  );
}

function Content(props) {
  if (props.val) {
    return (
      <motion.div
        layout
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        exit={{ opacity: 0 }}
      >
      <div className="desc">{props.val}</div>
      </motion.div>
    );
  }
  else {
    return (
      <motion.div
        layout
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        exit={{ opacity: 0 }}
      >
      <div className="desc">no content available for this post! :(</div>
      </motion.div>
    )
  }
}
function Content2(props) {
  return (
    <motion.div
      layout
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      exit={{ opacity: 0 }}
    >
    <div className="desc">{props.count} searches</div>
    </motion.div>
  );
}



const items = [0, 1, 2];
